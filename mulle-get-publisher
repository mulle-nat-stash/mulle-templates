#! /usr/bin/env bash
#
#   Copyright (c) 2017 Nat! - Mulle kybernetiK
#   All rights reserved.
#
#   Redistribution and use in source and binary forms, with or without
#   modification, are permitted provided that the following conditions are met:
#
#   Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
#   Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
#   Neither the name of Mulle kybernetiK nor the names of its contributors
#   may be used to endorse or promote products derived from this software
#   without specific prior written permission.
#
#   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#   POSSIBILITY OF SUCH DAMAGE.
#
usage()
{
   cat <<EOF >&2
Usage: mulle-publisher-get

   Get publisher information of available. First it will search in your
   'dependencies/share' folder for \`publisher-info.tap\`. Otherwise it will
   look at \`./bin/tap-info.sh\`.

EOF
   exit 1
}


fail()
{
   echo "Error:" "$*" >&2
   exit 1
}


log_verbose()
{
   if [ "${OPTION_VERBOSE}" = "YES" ]
   then
      echo "$*" >&2
   fi
}


variable_value()
{
   eval "echo \${${1}}"
}


publisher_variables()
{
   local name
   local names
   local value
   local variable
   local variables

   names="`compgen -A variable | egrep '^PUBLISHER'`"

   for name in ${names}
   do
      value="`variable_value "${name}"`"
      variable="${name}='${value}'"

      if [ -z "${variables}" ]
      then
         variables="${variable}"
      else
         variables="${variables}${OPTION_DELIMITER}${variable}"
      fi
   done

   if [ ! -z "${variables}" ]
   then
      echo "${variables}"
   fi
}


main()
{
   local directory

   local OPTION_READ_INFO="YES"

   local OPTION_VERSIONNAME
   local OPTION_VERSIONFILE
   local OPTION_VERBOSE="NO"
   local OPTION_DELIMITER="
"

   while [ $# -ne 0 ]
   do
      case "$1" in
         -h|--help)
            usage
         ;;

         -t)
            set -x
         ;;

         -v)
            OPTION_VERBOSE="YES"
         ;;

         -d|--delimiter)
            [ $# -eq 1 ] && "mising argument to $1"
            shift

            OPTION_DELIMITER="$1"
         ;;
         -*)
            echo "unknown option $1" >&2
            usage
         ;;

         *)
            break
         ;;
      esac

      shift
   done

   [ $# -ne 0 ] && usage

   #
   # prefer local mulle-homebrew if available
   # Do not embed it anymore!
   #
   if [ -z "`command -v mulle-homebrew-env`" ]
   then
      cat <<EOF >&2
mulle-homebrew-env not found in PATH.
Visit the homepage for installation instructions:
   https://github.com/mulle-nat/mulle-homebrew
EOF
      exit 1
   fi

   LIBEXEC_DIR="`mulle-homebrew-env libexec-path`" || exit 1

   local dependencydir
   local path

   # If there is a - possibly .gitignored - tap-info.sh file read it.
   # It could store PUBLISHER and PUBLISHER_TAP
   #
   dependencydir="`mulle-bootstrap path dependencies 2> /dev/null`"
   path="${dependencydir}/share/publisher-info.sh"
   if [ -f "${path}" ]
   then
      log_verbose "Reading \"${path}\"..."
      . "${path}"
   else
      # old name
      path="bin/tap-info.sh"
      if [ -f "bin/tap-info.sh" ]
      then
         log_verbose "Reading \"${path}\"..."
         . "${path}"
      fi
   fi

   publisher_variables
}


MULLE_EXECUTABLE="`basename -- $0`"
MULLE_BOOTSTRAP_FAIL_PREFIX="${MULLE_EXECUTABLE}"

main "$@"
